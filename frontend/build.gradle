group 'com.github.felipehjcosta'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin2js'
apply plugin: 'kotlin-dce-js'
apply plugin: 'org.jetbrains.kotlin.frontend'
apply plugin: 'kotlinx-serialization'

repositories {
    maven { url "https://kotlin.bintray.com/kotlin-js-wrappers/" }
}

dependencies {
    compile project(":client:common-client-js")
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-html-js:$kotlinx_html_js_version"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$serialization_version"
    compile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version" // for now only compile configuration is supported
    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version" // for now only compile configuration is supported

    compile "org.jetbrains:kotlin-react:$kotlin_react_version"
    compile "org.jetbrains:kotlin-react-dom:$kotlin_react_dom_version"
}

kotlinFrontend {
// uncomment this to specify exact nodejs version (bundle will be downloaded)
//    downloadNodeJsVersion = "8.7.0"
    downloadNodeJsVersion = '9.3.0'

    sourceMaps = true

    npm {

        dependency("react")
        dependency("react-dom")
        dependency("react-router")
        dependency("jquery")
        dependency("react-markdown")
        dependency("style-loader")

        devDependency("css-loader")
        devDependency("style-loader")
        devDependency("babel-loader", "7.1.3")
        devDependency("babel-core")
        devDependency("karma")
        devDependency("svg-react-loader")
    }

    webpackBundle {
        bundleName = "main"
        sourceMapEnabled = true
        contentPath = file('web')
    }

    karma {
        port = 9876
        runnerPort = 9100
    }
}

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
    kotlinOptions.main = "call"
    kotlinOptions.allWarningsAsErrors = true
}

compileTestKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js-tests/${project.name}-tests.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
    kotlinOptions.allWarningsAsErrors = true
}

sourceSets {
    main {
        kotlin.srcDirs += "src"
        resources.srcDirs += "resources"
        output.resourcesDir = "build/js/min/"
    }
    test {
        kotlin.srcDirs += "test"
        resources.srcDirs += "testResources"
    }
}
